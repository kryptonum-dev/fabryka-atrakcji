---
import BreadcrumbsSchema from '@/src/Schema/BreadcrumbsSchema.astro';
import { translations, type Language } from '../global/languages';


type Props = {
  data?: Array<{
    name: string;
    path: string;
  }>;
  firstItemType?: string;
};

const { data = [], firstItemType } = Astro.props;

const lang = Astro.params.lang as Language || 'pl'
const t = translations[lang]


const breadcrumbsData = [
  { name: t.breadcrumbsName, path: lang },
  ...data,
];

---

<BreadcrumbsSchema breadcrumbsData={breadcrumbsData} slot="head" />
{breadcrumbsData.length >= 2 && !firstItemType &&   
    <style is:global lang="scss">
        main {
          & > section:first-of-type {
            padding-top: clamp(1rem, calc(2vw / 0.48), 2rem) !important;
          }
        }
    </style>}
{breadcrumbsData.length >= 2 && (
  <nav class="Breadcrumbs max-width" data-first-item-type={firstItemType}>
    {breadcrumbsData.map(({ name, path }, i) => {
      const isLastItem = i === breadcrumbsData.length - 1
      const truncatedName = name.length > 40 ? name.slice(0, 40) + '...' : name
      return (
        isLastItem ? <span>{truncatedName}</span> : (
          <>
            <a href={path}>{truncatedName}</a>
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 12 13"><path stroke="#74535E" stroke-linecap="round" stroke-linejoin="round" d="m4.5 3 3 3.5-3 3.5"/></svg>          </>
        )
      )
    })}
  </nav>
)}

<style lang="scss">
  .Breadcrumbs {
    position: relative;
    display: flex;
    align-items: center;
    gap: 0.25rem;
    padding-top: clamp(1rem, calc(2vw / 0.48), 2rem);
    font-size: var(--typography-body-s, 0.75rem);
    letter-spacing: -0.01em;
    line-height: 1.6;
    max-height: max-content;

    a,
    span {
      position: relative;
      display: flex;
      align-items: center;
      min-height: 2.75rem;
      white-space: nowrap;
      
      &:first-child {
        color: var(--primary-800, #45051C);
        font-weight: 700;
      }

      &:last-child {
        overflow: hidden;
        text-overflow: ellipsis;
      }
    }
    
    svg {
      flex-shrink: 0;
      width: 0.75rem;
      height: 0.75rem;
    }

    a {
      position: relative;
      overflow: hidden;
      flex-shrink: 0;
      border-radius: 0.25rem;

      &::before, &::after {
        content: '';
        position: absolute;
      }

      &::before {
        position: absolute;
        bottom: 0.625rem;
        left: 0;
        z-index: 1;
        width: 100%;
        height: 0.125rem;
        background: linear-gradient(to right, #798DDC, #E7C78F 25%, #FA7468 74%, #798DDC 100%);
        transform: scaleX(0);
        transform-origin: left;
        transition: transform 450ms var(--easing);
      }

      &::after {
        position: absolute;
        left: 50%;
        top: 50%;
        z-index: -1;
        width: 100%;
        aspect-ratio: 1;
        background-color: var(--neutral-300, #EDE6DE);
        border-radius: 50%;
        transform: translate(-50%, -50%) scale(0);
        transform-origin: center;
        transition: transform 450ms var(--easing);
      }

      &:hover {
        &::before {
          transform: scaleX(1);
        }
      }

      &:focus:not(:focus-visible) {
        &::after {
          transform: translate(-50%, -50%) scale(1.2);
        }
      }
    }

    &[data-first-item-type="AsymmetricalPhotoGalleryGrid"] {
      position: absolute;
      top: clamp(10px, calc(18vw / 7.68), 32px);      
      left: 50%;      
      transform: translateX(-50%);
      padding-top: 0;
      max-width: 85.375rem;
      width: 100%;
      padding-left: var(--pageMargin);
    }

    &[data-first-item-type="ContactForm"] {
      position: absolute;
      top: 5rem;
      left: 50%;      
      transform: translateX(-50%);
      padding-top: 0;
      max-width: 85.375rem;
      width: 100%;
      padding-left: var(--pageMargin);
      padding-right: var(--pageMargin);

      @media (max-width: 66.8125rem) {
        max-width: calc(50rem + var(--pageMargin) * 2);
        top: clamp(0.375rem, calc(0.5vw / 0.48), 1rem);
      }
    }

    &[data-first-item-type="NotFound"] {
      position: absolute; 
      top: clamp(14px, calc(20vw / 7.68), 24px);      
      left: 50%;      
      transform: translateX(-50%);
      padding-top: 0;
      max-width: 85.375rem;
      width: 100%;
      padding-left: var(--pageMargin);
      z-index: 2;
    }

    &[data-first-item-type="CaseStudyHero"] {
    position: absolute;
    top: 0;
    left: 50%;
    transform: translateX(-50%);
    padding-top: 0;
    max-width: 85.375rem;
    width: 100%;
    padding: clamp(1rem, calc(1.5vw / 0.48), 3rem) var(--pageMargin) 0;
  }

  &[data-first-item-type="CaseStudiesListing"] {
    position: absolute;
    top: 0;
    left: 50%;
    transform: translateX(-50%);
    padding-top: 0;
    max-width: 85.375rem;
    width: 100%;
    padding: clamp(0.5rem, calc(1vw / 0.48), 2.5rem) var(--pageMargin) 0;

    @media (max-width: 599px) and (min-width: 440px) {
      padding-left: calc(var(--pageMargin) + 0.5rem);
    }
  }

  &[data-first-item-type="BlogPage"] {
    position: absolute;
    top: 0;
    left: 50%;
    transform: translateX(-50%);
    padding-top: 0;
    max-width: 85.375rem;
    width: 100%;
    padding: clamp(0.75rem, calc(2vw / 0.48), 2rem) var(--pageMargin) 0;
  }
}

  
</style>

                                                                    