---
import Layout from './Layout.astro'
import type { HeadProps } from './Head.astro'

interface Props {
  metadata: HeadProps
  backLink: {
    text: string
    url: string
  }
  class?: string
  [key: string]: any // Allow for additional custom attributes
}

const { metadata, backLink, class: className, ...rest } = Astro.props
---

<Layout {...metadata}>
  <section class:list={['QuoteCartWrapper', className]} {...rest}>
    <a href={backLink.url} class="back-link">
      <span class="icons">
        <svg xmlns="http://www.w3.org/2000/svg" width="12" height="13" viewBox="0 0 12 13" fill="none">
          <path
            d="M7.5 2.75L4.5 6.25L7.5 9.75"
            stroke="#74535E"
            stroke-width="1.25"
            stroke-linecap="round"
            stroke-linejoin="round"></path>
        </svg>
        <svg xmlns="http://www.w3.org/2000/svg" width="12" height="13" viewBox="0 0 12 13" fill="none">
          <path
            d="M7.5 2.75L4.5 6.25L7.5 9.75"
            stroke="#74535E"
            stroke-width="1.25"
            stroke-linecap="round"
            stroke-linejoin="round"></path>
        </svg>
      </span>
      <span>{backLink.text}</span>
    </a>
    <div class="container">
      <slot />
    </div>
  </section>
</Layout>

<style lang="scss">
  .QuoteCartWrapper {
    max-width: 55.5rem;
    margin: 0 auto;

    .back-link {
      margin-bottom: 0.25rem;
      display: flex;
      align-items: center;
      gap: 0.375rem;
      color: var(--primary-700, #600d2a);
      font-size: var(--typography-body-m, 0.875rem);
      letter-spacing: -0.01em;
      line-height: 1.7;
      min-height: 3rem;
      max-width: fit-content;
      position: relative;
      overflow: hidden;
      padding: 0 0.5rem;
      margin-left: -0.5rem;
      border-radius: 0.5rem;

      &::before {
        content: '';
        position: absolute;
        width: 100%;
        height: auto;
        aspect-ratio: 1/1;
        background: var(--neutral-200, #f5f1ec);
        z-index: -1;
        border-radius: 50%;
        transform: scale(0);
        transition: transform 425ms var(--easing);
      }

      .icons {
        position: relative;
        overflow: hidden;

        :global(svg) {
          transition: transform 350ms var(--easing);
          &:last-child {
            position: absolute;
            top: 0%;
            left: 0%;
            transform: rotate(40deg) translateX(100%);
          }
        }
      }

      > span:last-child {
        transition: transform 350ms var(--easing);
      }

      &:hover {
        .icons {
          :global(svg) {
            &:first-child {
              transform: translateX(-100%);
            }

            &:last-child {
              transition: transform 350ms cubic-bezier(0.18, 0.89, 0.32, 1.27);
              transform: rotate(0deg) translateX(0%);
            }
          }
        }

        > span:last-child {
          transform: translateX(-2px);
        }
      }

      &:focus:not(:focus-visible) {
        &::before {
          transform: scale(1.2);
        }
      }

      &:focus-visible {
        outline-offset: 0px;
      }
    }

    .container {
      position: relative;
      min-height: 30rem;
      border-radius: clamp(0.5rem, calc(0.75vw / 0.48), 0.75rem);
      isolation: isolate;

      &::before,
      &::after {
        inset: 2px;
        position: absolute;
        content: '';
        background: var(--neutral-200, #f5f1ec);
        z-index: -1;
        border-radius: clamp(0.4rem, calc(0.6vw / 0.48), 0.6rem);
      }

      &::after {
        background: conic-gradient(
          from 135deg at 50% 50%,
          #798ddc 0deg,
          #e7c78f 90deg,
          #fa7468 266.40000343322754deg,
          #798ddc 360deg
        );
        z-index: -2;
        inset: 0;
        border-radius: clamp(0.5rem, calc(0.75vw / 0.48), 0.75rem);
      }
    }

    @media (max-width: 918px) {
      .back-link {
        margin-left: 2rem;
      }
    }

    @media (max-width: 469px) {
      .back-link {
        margin-left: 1rem;
      }
      .container {
        padding-left: 0.5rem;
        padding-right: 0.5rem;
        background-color: var(--neutral-200);

        &::after,
        &::before {
          display: none;
        }
      }
    }
  }
</style>
