<div class="Wrapper">
  <slot name="open" />
  <div class="popup-window" aria-hidden="true">
    <div class="content">
      <slot name="content" />
    </div>
  </div>
</div>

<style lang="scss">
  .Wrapper {
    z-index: 999;
    position: relative;
    &:has(.popup-window[aria-hidden='true']) {
      z-index: 50;
    }

    .popup-window {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      place-items: center;
      display: grid;

      &::before {
        content: '';
        position: absolute;
        inset: 0;
        background: linear-gradient(180deg, rgba(250, 247, 247, 0.3) 0%, #faf7f7 100%);
        backdrop-filter: blur(5px);
        z-index: -1;
        animation: popup-fade-in 150ms;
      }

      &[aria-hidden='true'] {
        display: none;
      }

      .content {
        animation: content-bounce-in 250ms cubic-bezier(0.18, 0.89, 0.32, 1.17);
        position: relative;

        &::before,
        &::after {
          position: absolute;
          inset: 0.125rem;
          z-index: -1;
          content: '';
          background: var(--neutral-200, #f5f1ec);
          border-radius: clamp(1rem, calc(1.5vw / 0.48), 2rem);
        }

        &::before {
          inset: 0;
          background: conic-gradient(
            from 135deg at 50% 50%,
            #798ddc 0deg,
            #e7c78f 90deg,
            #fa7468 266.40000343322754deg,
            #798ddc 360deg
          );
        }

        > :global(div) {
          max-height: calc(100dvh - 6rem);
          width: calc(100vw - var(--pageMargin) * 2);
        }

        :global(.CloseButton) {
          position: relative;
          isolation: isolate;
          border-radius: 50%;
          min-width: 2.75rem;
          min-height: 2.75rem;
          display: grid;
          place-items: center;
          z-index: 5;
          transition: transform 300ms var(--easing);

          &::before {
            content: '';
            position: absolute;
            inset: 0;
            background: var(--neutral-100, #f5f1ec);
            border-radius: 50%;
            transform: scale(0);
            transition: transform 300ms var(--easing);
            z-index: -1;
          }

          &:hover {
            transform: scale(1.2);
            &::before {
              transform: scale(1);
            }
          }

          &:focus:not(:focus-visible) {
            transform: scale(1);
          }

          &:focus-visible {
            outline-offset: -2px;
          }
        }
      }
    }

    @media (max-width: 31.1875rem) {
      .popup-window {
        .content {
          align-self: end;
          animation: content-slide-in 350ms var(--easing);

          &::before,
          &::after {
            border-bottom-left-radius: 0;
            border-bottom-right-radius: 0;
          }

          > :global(div) {
            width: 100%;
          }

          :global(.CloseButton) {
            position: absolute;
            bottom: calc(100% + 6px);
            right: 6.5vw;

            &::after {
              content: '';
              position: absolute;
              top: 50%;
              left: 50%;
              transform: translate(-50%, -50%);
              width: 3.5rem;
              height: 3.5rem;
              z-index: -2;
              background: var(--neutral-200, #faf7f7);
              border-radius: 8px 8px 0px 0px;
              border: 1px solid var(--primary-500, #f67258);
              border-bottom: none;
            }

            &:hover {
              transform: none;
            }
          }
        }
      }
    }

    @keyframes popup-fade-in {
      0% {
        opacity: 0;
      }
      100% {
        opacity: 1;
      }
    }

    @keyframes content-bounce-in {
      0% {
        transform: scale(0.9);
        opacity: 0;
      }
      100% {
        transform: scale(1);
        opacity: 1;
      }
    }

    @keyframes content-slide-in {
      0% {
        transform: translateY(10%);
        opacity: 0;
      }
      100% {
        transform: translateY(0);
        opacity: 1;
      }
    }
  }
</style>

<script>
  const wrapperList = document.querySelectorAll('.Wrapper')
  wrapperList.forEach((wrapper) => {
    const popupWindow = wrapper.querySelector('.popup-window')! as HTMLDivElement
    const openButton = wrapper.querySelector('button')! as HTMLButtonElement
    const content = wrapper.querySelector('.content')! as HTMLDivElement
    const closeButtons = wrapper.querySelectorAll('button[data-popup-close]')! as NodeListOf<HTMLButtonElement>

    openButton?.addEventListener('click', () => {
      popupWindow?.setAttribute('aria-hidden', 'false')
    })

    closeButtons.forEach((button) => {
      button.addEventListener('click', () => {
        popupWindow.setAttribute('aria-hidden', 'true')
      })
    })

    popupWindow?.addEventListener('click', (event) => {
      if (!content?.contains(event.target as Node)) {
        popupWindow.setAttribute('aria-hidden', 'true')
      }
    })

    document.addEventListener('keydown', (event) => {
      if (event.key === 'Escape' && popupWindow?.getAttribute('aria-hidden') === 'false') {
        popupWindow.setAttribute('aria-hidden', 'true')
      }
    })
  })
</script>
