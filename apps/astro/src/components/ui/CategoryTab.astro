---
import type { HTMLAttributes } from 'astro/types'

type Props = { isActive?: boolean; count: number; name: string } & HTMLAttributes<'a'>

const { isActive = false, count, name, ...props } = Astro.props
---

<a {...props} class="CategoryTab" aria-current={isActive ? 'page' : undefined}>
  <div class="wrapper">
    <span class="name">{name}</span>
    <span class="name">{name}</span>
    <span class="count">{count}</span>
  </div>
</a>

<style lang="scss">
  .CategoryTab {
    position: relative;
    border-radius: 999rem;
    overflow: hidden;
    isolation: isolate;
    display: block;

    &::before {
      position: absolute;
      content: '';
      inset: 0;
      border-radius: 999rem;
      transform: translateY(100%);
      transition: transform 300ms var(--easing);
      z-index: 2;
      background: var(--primary-800, #45051c);
    }
    .wrapper {
      min-height: 2.75rem;
      display: flex;
      gap: 0.5rem;
      align-items: center;
      padding: 0rem 0.25rem 0rem 0.75rem;
      border: 2px solid var(--primary-500, #f67258);
      border-radius: 999rem;
      line-height: 1.7;
      letter-spacing: -0.01em;
      font-size: var(--typography-body-m, 0.875rem);
      color: var(--primary-700, #600d2a);
      position: relative;
      overflow: hidden;

      &::before {
        position: absolute;
        content: '';
        inset: 0;
        border-radius: 999rem;
        background: var(--neutral-300, #ede6de);
        z-index: 1;
        transform: translateY(100%);
        transition: transform 350ms var(--easing);
      }

      .name {
        transition:
          transform 300ms var(--easing),
          color 150ms;
        position: relative;
        z-index: 2;

        &:nth-child(2) {
          position: absolute;
          left: 0.75rem;
          bottom: 50%;
          transform: translateY(-130%);
        }
      }

      .count {
        width: 2rem;
        height: 2rem;
        display: grid;
        place-items: center;
        border-radius: 999rem;
        background-color: var(--neutral-100, #faf7f7);
        z-index: 2;
        transition:
          background-color 150ms,
          color 150ms;
      }
    }

    &:hover {
      .wrapper {
        &::before {
          transform: translateY(0);
        }
        .name {
          &:nth-child(1) {
            transform: translateY(130%);
          }
          &:nth-child(2) {
            transform: translateY(50%);
            transition: transform 300ms cubic-bezier(0.18, 0.89, 0.32, 1.17);
          }
        }
      }
    }

    &:focus-visible {
      outline: none;

      &::before {
        border: 2px solid var(--primary-500);
      }
      .wrapper {
        border-color: var(--primary-700);
      }
    }

    &[aria-current='page'] {
      &::before {
        transform: translateY(0);
      }
      .wrapper {
        .name {
          color: var(--neutral-100, #faf7f7);
        }

        .count {
          background-color: var(--primary-700, #600d2a);
          color: var(--primary-200, #e6cbd5);
        }
      }
    }
  }
</style>
