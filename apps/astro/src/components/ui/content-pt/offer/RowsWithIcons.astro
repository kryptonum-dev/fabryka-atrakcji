---
import imageToInlineSvg from '@/src/utils/image-to-inline-svg'

export const RowsWithIcons_Query = `
  _type == "RowsWithIcons" => {
    rows[] {
      "icon": icon.asset -> url,
      text,
    },
  },
`
type Props = {
  node: {
    rows: {
      icon: string
      text: string
    }[]
  }
}

const svgIcons = await Promise.all(Astro.props.node.rows.map(async (row) => await imageToInlineSvg(row.icon)))

const { node } = Astro.props
---

<ul class="RowsWithIcons">
  {
    node.rows.map((row, index) => (
      <li>
        <Fragment set:html={svgIcons[index]} />
        <span>{row.text}</span>
      </li>
    ))
  }
</ul>
<style lang="scss">
  .RowsWithIcons {
    margin-bottom: 1rem !important;
    li {
      padding: clamp(0.5rem, calc(0.75vw / 0.48), 0.75rem) clamp(0.25rem, calc(0.4375vw / 0.48), 0.4375rem);
      border-bottom: 2px solid var(--neutral-200, #f5f1ec);
      display: flex;
      gap: clamp(0.625rem, calc(0.75vw / 0.48), 0.75rem);
      align-items: start;
      font-size: var(--typography-body-xl, 1.125rem);
      line-height: 1.5;

      &:not(:last-child) {
        margin-bottom: clamp(0.25rem, calc(0.375vw / 0.48), 0.375rem);
      }
      :global(svg) {
        margin-top: 3px;
        width: clamp(1.25rem, calc(1.5vw / 0.48), 1.5rem);
        height: clamp(1.25rem, calc(1.5vw / 0.48), 1.5rem);
      }

      span {
      }
    }
  }
</style>
