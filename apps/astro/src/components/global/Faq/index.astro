---
import sanityFetch from '@/src/utils/sanity.fetch'
import Accordion from '../../ui/Accordion.astro'
import Button from '../../ui/Button'
import PortableText, { PortableTextQuery, type PortableTextValue } from '../../ui/portable-text'
import type { Language } from '@/src/global/languages'
import PopupWindow from '../../ui/PopupWindow.astro'
import CloseButton from '../../ui/CloseButton.astro'
import type { FormStateTypes } from '@/src/global/types'
import Form from './Form.tsx'
import { toPlainText } from '@/src/utils/to-plain-text'

const language = (Astro.params.lang as Language) || 'pl'

const translations = {
  pl: {
    question: 'Zadaj pytanie',
  },
  en: {
    question: 'Ask a question',
  },
}

const t = translations[language]

export const Faq_Query = `
  _type == "Faq" => {
    ${PortableTextQuery('heading')}
    questions[] -> {
      ${PortableTextQuery('question')}
      ${PortableTextQuery('answer')}
    },
    ${PortableTextQuery('subheading')}
    ${PortableTextQuery('paragraph')}
    formPopup {
      ${PortableTextQuery('heading')}
      ${PortableTextQuery('paragraph')}
      formState {
        success{
        ${PortableTextQuery('heading')}
        ${PortableTextQuery('paragraph')}
          highlightedSocialMedia[] -> {
              name,
              link,
              iconString,
            },
          },
          error {
            ${PortableTextQuery('heading')}
            ${PortableTextQuery('paragraph')}
          },
        },
      },
    },
`

type Props = {
  index: number
  sectionId?: string
  heading: PortableTextValue
  questions: {
    question: PortableTextValue
    answer: PortableTextValue
  }[]
  paragraph: PortableTextValue
  subheading: PortableTextValue
  formPopup: {
    heading: PortableTextValue
    paragraph: PortableTextValue
    formState: FormStateTypes
  }
}

const phone = await sanityFetch<{
  tel?: string
}>({
  query: `*[_type == "global" && language == $language][0].tel`,
  params: {
    language,
  },
})

const { index, sectionId, heading, questions, paragraph, subheading, formPopup } = Astro.props

const clientFormStates = {
  success: {
    heading: toPlainText(formPopup.formState.success.heading),
    paragraph: toPlainText(formPopup.formState.success.paragraph),
    highlightedSocialMedia: formPopup.formState.success.highlightedSocialMedia,
  },
  error: {
    heading: toPlainText(formPopup.formState.error.heading),
    paragraph: toPlainText(formPopup.formState.error.paragraph),
  },
}
---

<section class="Faq" id={sectionId}>
  <div class="container">
    <header class="header">
      <PortableText value={heading} class="heading" heading={index === 0 ? 'h1' : 'h2'} />
    </header>
    <div class="questions">
      {questions.map(({ question, answer }) => <Accordion question={question} answer={answer} open={false} />)}
    </div>
  </div>
  <div class="form-row">
    <div class="wrapper">
      <div class="icon">
        <svg xmlns="http://www.w3.org/2000/svg" width="25" height="24" fill="none"
          ><path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M22.383 12c0 5.523-4.477 10-10 10s-10-4.477-10-10 4.477-10 10-10 10 4.477 10 10Zm-10-4.25c-.621 0-1.125.504-1.125 1.125a.75.75 0 0 1-1.5 0 2.625 2.625 0 1 1 4.508 1.829c-.092.095-.18.183-.264.267-.216.215-.405.404-.571.617-.22.282-.298.489-.298.662V13a.75.75 0 0 1-1.5 0v-.75c0-.655.305-1.186.614-1.583.229-.294.516-.58.75-.814l.193-.194a1.125 1.125 0 0 0-.807-1.909Zm0 9.25a1 1 0 1 0 0-2 1 1 0 0 0 0 2Z"
            fill="#F67258"></path></svg
        >
      </div><svg xmlns="http://www.w3.org/2000/svg" width="1206" height="154" fill="none"
        ><path
          d="M1.258 152.5c10.51-6.38 28.22-.43 39.13-6.4 10.78-5.9 15.29-24.02 26.44-29.53 11.02-5.45 28.17 1.97 39.53-3.08 11.24-5 17.18-22.71 28.71-27.33 11.53-4.62 28.92 3.75 41.12-.62 12.2-4.37 19.81-21.71 32.15-25.64 12.34-3.93 28.6 5.82 41.06 2.32 12.46-3.5 21.26-20.29 33.82-23.39 12.56-3.1 28.94 7.52 41.98 4.75 13.04-2.77 23.32-19.03 36.44-21.39 13.12-2.36 28.42 9.33 41.6 7.38 13.18-1.95 24.45-17.56 37.68-19.12 13.23-1.56 28.25 10.98 41.72 9.8 13.43-1.17 25.89-16.12 39.38-16.9 13.49-.78 27.57 12.62 41.07 12.23 13.5-.39 26.79-14.58 40.3-14.58 13.51 0 26.81 14.19 40.3 14.58 13.49.39 27.61-13.01 41.07-12.23 13.46.78 25.95 15.72 39.38 16.9 13.43 1.18 28.34-11.37 41.72-9.8 13.23 1.55 24.56 17.18 37.68 19.12 13.12 1.94 28.56-9.72 41.6-7.38 13.04 2.34 23.48 18.64 36.44 21.39 12.96 2.75 29.13-7.92 41.98-4.75 12.85 3.17 21.47 19.91 33.82 23.39 12.35 3.48 28.83-6.21 41.06-2.32 12.342 3.93 20.072 21.31 32.152 25.64 12.2 4.37 29.22-4.15 41.12.62 11.9 4.77 17.48 22.33 28.71 27.33 11.36 5.06 28.5-2.36 39.53 3.08 11.15 5.51 15.66 23.63 26.44 29.53 10.91 5.97 28.62.02 39.12 6.4"
          stroke="url(#paint0_linear_5978_44852)"
          stroke-width="1.5"
          stroke-miterlimit="10"></path><defs
          ><linearGradient
            id="paint0_linear_5978_44852"
            x1="1205.51"
            y1="0.999878"
            x2="1.25781"
            y2="0.999878"
            gradientUnits="userSpaceOnUse"
            ><stop stop-color="#798DDC"></stop><stop offset="0.25" stop-color="#E7C78F"></stop><stop
              offset="0.74"
              stop-color="#FA7468"></stop><stop offset="1" stop-color="#798DDC"></stop></linearGradient
          ></defs
        ></svg
      >
    </div>
    <div class="background"></div>
    <PortableText value={subheading} class="subheading" heading={index === 0 ? 'h2' : 'h3'} />
    <PortableText value={paragraph} class="paragraph" />
    <PopupWindow>
      <Button slot="open" theme="secondary">{t.question}</Button>
      <div slot="content" class="popup-container">
        <div class="outline">
          <div class="icon">
            <svg xmlns="http://www.w3.org/2000/svg" width="25" height="24" fill="none"
              ><path
                fill-rule="evenodd"
                clip-rule="evenodd"
                d="M22.383 12c0 5.523-4.477 10-10 10s-10-4.477-10-10 4.477-10 10-10 10 4.477 10 10Zm-10-4.25c-.621 0-1.125.504-1.125 1.125a.75.75 0 0 1-1.5 0 2.625 2.625 0 1 1 4.508 1.829c-.092.095-.18.183-.264.267-.216.215-.405.404-.571.617-.22.282-.298.489-.298.662V13a.75.75 0 0 1-1.5 0v-.75c0-.655.305-1.186.614-1.583.229-.294.516-.58.75-.814l.193-.194a1.125 1.125 0 0 0-.807-1.909Zm0 9.25a1 1 0 1 0 0-2 1 1 0 0 0 0 2Z"
                fill="#F67258"></path>
            </svg>
          </div>
          <svg xmlns="http://www.w3.org/2000/svg" width="566" height="56" fill="none"
            ><path
              d="M0 72c4.94-2.99 13.264-.201 18.391-3 5.067-2.764 7.187-11.256 12.427-13.839 5.18-2.554 13.24.924 18.58-1.443 5.282-2.343 8.074-10.643 13.493-12.808 5.42-2.165 13.592 1.757 19.327-.29 5.733-2.049 9.31-10.175 15.11-12.017 5.8-1.841 13.442 2.728 19.298 1.088 5.857-1.64 9.993-9.51 15.896-10.962 5.903-1.453 13.602 3.524 19.73 2.226 6.129-1.298 10.961-8.918 17.127-10.024 6.167-1.106 13.358 4.372 19.552 3.458 6.195-.914 11.492-8.23 17.71-8.96 6.218-.731 13.278 5.146 19.609 4.592 6.312-.548 12.168-7.554 18.508-7.92 6.341-.365 12.958 5.915 19.303 5.732C270.406 7.65 276.653 1 283.002 1c6.35 0 12.601 6.65 18.941 6.833 6.341.183 12.977-6.097 19.303-5.732 6.327.366 12.197 7.367 18.509 7.92 6.312.553 13.32-5.328 19.609-4.592 6.218.726 11.543 8.051 17.709 8.96 6.167.91 13.424-4.555 19.552-3.458 6.129 1.096 11.036 8.735 17.127 10.024 6.091 1.289 13.691-3.712 19.731-2.226 6.039 1.486 10.091 9.33 15.895 10.962 5.805 1.63 13.551-2.91 19.299-1.088 5.8 1.842 9.433 9.987 15.11 12.016 5.734 2.048 13.734-1.944 19.327.291 5.593 2.235 8.215 10.465 13.494 12.808 5.339 2.371 13.395-1.106 18.579 1.443 5.24 2.583 7.36 11.075 12.427 13.84 5.127 2.797 13.451.009 18.386 2.999"
              stroke="url(#paint0_linear_6154_37249)"
              stroke-width="1.5"
              stroke-miterlimit="10"></path><defs
              ><linearGradient
                id="paint0_linear_6154_37249"
                x1="566"
                y1="0.999943"
                x2="0"
                y2="0.999943"
                gradientUnits="userSpaceOnUse"
                ><stop stop-color="#798DDC"></stop><stop offset="0.25" stop-color="#E7C78F"></stop><stop
                  offset="0.74"
                  stop-color="#FA7468"></stop><stop offset="1" stop-color="#798DDC"></stop></linearGradient
              ></defs
            >
          </svg>
        </div>
        <div class="form-wrapper">
          <div class="form-content">
            <header class="form-header">
              <PortableText value={formPopup.heading} class="form-heading" heading={index === 0 ? 'h2' : 'h3'} />
              <PortableText value={formPopup.paragraph} class="form-paragraph" />
            </header>
            <Form client:idle lang={language} formState={clientFormStates} />
            <CloseButton />
          </div>
        </div>
      </div>
    </PopupWindow>
    {
      phone && (
        <a href={`tel:${phone}`} class="phone">
          <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="none">
            <path
              d="m13.8 10.755-.38.377s-.902.897-3.365-1.552c-2.462-2.448-1.56-3.345-1.56-3.345l.239-.238c.589-.585.644-1.525.13-2.211l-1.05-1.404c-.636-.85-1.865-.962-2.594-.237l-1.308 1.3c-.36.36-.603.826-.574 1.342.075 1.322.674 4.166 4.01 7.484 3.54 3.52 6.86 3.66 8.218 3.533.43-.04.803-.26 1.104-.558l1.184-1.178c.8-.794.574-2.156-.449-2.712l-1.592-.865c-.671-.365-1.489-.258-2.014.264Z"
              fill="#F67258"
            />
          </svg>
          <span>{phone}</span>
        </a>
      )
    }
  </div>
</section>

<style lang="scss">
  .Faq {
    padding: clamp(4rem, calc(6vw / 0.48), 8rem) var(--pageMargin) 0;
    background: var(--neutral-200, #f5f1ec);
    .container {
      position: relative;
      margin: 0 auto;
      max-width: 41.1875rem;
      .header {
        margin-bottom: clamp(1.25rem, calc(3vw / 0.48), 3rem);
      }
      .questions {
        display: flex;
        flex-direction: column;
        gap: clamp(0.25rem, calc(0.25vw / 0.48), 0.25rem);
      }
    }
    .icon {
      width: 2.75rem;
      height: 2.75rem;
      display: grid;
      place-items: center;
      border-radius: 50%;
      z-index: 3;
      position: relative;
      overflow: hidden;
      position: absolute;
      left: 50%;
      top: 0;
      transform: translate(-50%, -80%);

      &::before,
      &::after {
        position: absolute;
        inset: 0.125rem;
        content: '';
        background:
          conic-gradient(
            from 135deg at 50% 50%,
            rgba(121, 141, 220, 0.12) 0deg,
            rgba(231, 199, 143, 0.12) 90deg,
            rgba(250, 116, 104, 0.12) 266.40000343322754deg,
            rgba(121, 141, 220, 0.12) 360deg
          ),
          var(--neutral-100, #faf7f7);
        border-radius: 50%;
      }
      &::before {
        inset: 0;
        background: conic-gradient(
          from 135deg at 50% 50%,
          #798ddc 0deg,
          #e7c78f 90deg,
          #fa7468 266.40000343322754deg,
          #798ddc 360deg
        );
      }
      svg {
        z-index: 2;
      }
    }
    .form-row {
      position: relative;
      display: grid;
      grid-template-columns: clamp(16.25rem, calc(260vw / 7.68), 24.1875rem) auto auto;
      grid-template-rows: auto 1fr;
      justify-content: center;
      max-width: 75.375rem;
      margin: clamp(2rem, calc(4vw / 0.48), 5rem) auto 0;
      padding: clamp(0.75rem, calc(56vw / 7.68), 3.5rem) 0 1.75rem;
      column-gap: 1rem;
      .wrapper {
        position: absolute;
        inset: 0;
        z-index: 1;
        > svg {
          position: absolute;
          bottom: 0;
          left: 50%;
          transform: translateX(-50%);
          min-width: max-content;
        }
      }
      .background {
        position: absolute;
        bottom: 50%;
        left: 50%;
        width: 82.9375rem;
        height: 148%;
        transform: translate(-50%, 50%);
        background-color: var(--neutral-100);
        clip-path: ellipse(48% 122% at 50% 133%);
      }
      .subheading {
        grid-column: 1/2;
        grid-row: 1/2;
        z-index: 1;
        color: var(--primary-800, #45051c);
        font-family: 'Neue Haas Unica', 'Neue Haas Unica Fallback', sans-serif;
        font-weight: 700;
        letter-spacing: -0.03em;
      }
      .paragraph {
        grid-column: 1/2;
        grid-row: 2/3;
        z-index: 1;
        align-self: start;
      }
      :global(.Wrapper) {
        grid-column: 2/3;
        grid-row: 1/3;
        align-self: center;
      }
      .phone {
        position: relative;
        z-index: 1;
        display: flex;
        grid-column: 3/4;
        grid-row: 1/3;
        align-self: center;
        gap: clamp(0.375rem, calc(6vw / 7.68), 0.375rem);
        color: var(--primary-800, #45051c);
        span {
          position: relative;
          &::before {
            position: absolute;
            bottom: 0;
            left: 0;
            display: block;
            width: 100%;
            height: 4%;
            content: '';
            transform: scaleX(0);
            transform-origin: left;
            background: var(--primary-400, #74535e);
            transition: transform 300ms var(--easing);
          }
        }
        svg {
          margin-top: 0.25rem;
        }
        &:hover {
          svg {
            animation: Faq-ring-low 700ms var(--easing) infinite alternate;
          }
          span::before {
            transform: scaleX(1);
            transition: transform 350ms cubic-bezier(0.18, 0.89, 0.32, 1.27);
          }
        }
        &:focus:not(:focus-visible) {
          svg {
            animation: Faq-ring-high 500ms var(--easing) infinite alternate;
          }
        }
      }
      :global(.popup-window) {
        padding-top: 5rem;
      }
      .popup-container {
        position: relative;
        .outline {
          position: absolute;
          top: 0%;
          left: 50%;
          z-index: -1;
          transform: translate(-50%, -78%);
          > svg {
            max-width: max-content;
          }
          .icon {
            transform: translate(-50%, -32%);
          }
        }
        .form-wrapper {
          border-radius: clamp(12px, calc(24vw / 7.68), 32px);
          isolation: isolate;

          position: relative;
          max-width: 956px;
          width: calc(100vw - var(--pageMargin) * 2);
          padding: 2.5rem 2rem;

          &::before,
          &::after {
            position: absolute;
            inset: 0.125rem;
            z-index: -1;
            content: '';
            background: var(--neutral-200, #f5f1ec);
            border-radius: clamp(12px, calc(24vw / 7.68), 32px);
          }

          &::before {
            inset: 0;
            background: conic-gradient(
              from 135deg at 50% 50%,
              #798ddc 0deg,
              #e7c78f 90deg,
              #fa7468 266.40000343322754deg,
              #798ddc 360deg
            );
          }
          .form-content {
            display: grid;
            grid-template-columns: 1fr 24.75rem auto;
            width: 100%;
            height: 100%;
            max-height: 75vh;
            column-gap: 1.5rem;
            overflow-y: auto;
            -ms-overflow-style: none;
            scrollbar-width: none;
            &::-webkit-scrollbar {
              display: none;
            }
          }
          .form-header {
            max-width: 22.75rem;
            align-self: center;
            .form-heading {
              margin-bottom: clamp(1rem, calc(1vw / 0.48), 1.5rem);
              color: var(--primary-700, #600d2a);
              font-family: 'Neue Haas Unica', 'Neue Haas Unica Fallback', sans-serif;
              font-size: var(--typography-body-2xl, 1.5rem);
              font-weight: 700;
              line-height: 1.25;
              letter-spacing: -0.04em;
            }
            .form-paragraph {
              font-size: var(--typography-body-xl, 1.125rem);
              line-height: 1.5;
              letter-spacing: -0.02em;
            }
          }
          :global(.CloseButton) {
            grid-column: 3/4;
            align-self: start;
            z-index: 999;
          }

          :global(form) {
            background-color: var(--neutral-100, #faf7f7);
            border-radius: clamp(8px, calc(12vw / 7.68), 12px);
            padding: 2rem;
            :global(label) {
              margin-bottom: 1.25rem;

              &:nth-of-type(2) {
                position: relative;
                z-index: 20;
              }
              &:nth-of-type(4) {
                margin-bottom: 1rem;
              }
            }
            :global(button[type='submit']) {
              width: 100%;
              max-width: 100%;
              :global(span) {
                margin: 0 auto;
                padding-right: 1.75rem;
              }
            }
            :global([data-loader]) {
              inset: 0.375rem;
              border-radius: clamp(8px, calc(12vw / 7.68), 32px);
            }

            :global([data-form-state]) {
              inset: 0.125rem;
              justify-content: center;
              border-radius: clamp(12px, calc(24vw / 7.68), 32px);
              grid-template-rows: repeat(4, 1fr);
              align-items: center;
              text-align: center;

              &[data-is-success='false'] {
                :global(> *:last-child) {
                  margin-top: clamp(2rem, calc(2.5vw / 0.48), 3rem);
                }
              }
              :global(> *) {
                max-width: 23.5rem;
                &:last-child {
                  margin-top: 1.5rem;
                }
              }
            }
          }
        }
      }
    }
    @media (max-width: 899px) {
      .form-row .popup-container .form-wrapper {
        max-width: 38rem;
        padding: clamp(1.5rem, calc(56vw / 7.68), 3.5rem) clamp(1rem, calc(56vw / 7.68), 3.5rem);
        .form-content {
          grid-template-columns: 1fr auto;
        }
        .form-header {
          grid-column: 1/2;
          grid-row: 1/2;
          max-width: 100%;
          margin-bottom: clamp(3rem, calc(4vw / 0.48), 4rem);
        }
        :global(.CloseButton) {
          grid-column: 2/3;
          grid-row: 1/2;
        }
        :global(form) {
          grid-column: 1/3;
          grid-row: 2/3;
          width: 100%;
          padding: clamp(1rem, calc(2.25vw / 0.48), 2.25rem);
          justify-self: center;
        }
      }
    }
    @media (max-width: 799px) {
      .form-row {
        margin-top: 6rem;
      }
    }
    @media (max-width: 41.8125rem) {
      .form-row .popup-container .form-wrapper {
        :global(.CloseButton) {
          top: -3.125rem;
          right: 1.5rem;
        }
      }
    }
    @media (max-width: 649px) {
      .form-row {
        grid-template-columns: repeat(2, 1fr);
        .subheading {
          grid-column: 1/3;
          grid-row: 1/2;
          justify-self: center;
        }
        .paragraph {
          grid-column: 1/3;
          grid-row: 2/3;
          margin-bottom: clamp(0.75rem, calc(1vw / 0.48), 1rem);
          justify-self: center;
        }
        :global(.Wrapper) {
          grid-column: 1/2;
          grid-row: 3/4;
          justify-self: end;
        }
        .phone {
          grid-column: 2/3;
          grid-row: 3/4;
        }
        .wrapper {
          > svg {
            transform: translate(-50%, -10.5vw) scale(0.8);
          }
        }
      }
    }
    @media (max-width: 539px) {
      .form-row .popup-container .form-wrapper {
        width: calc(100% + var(--pageMargin) * 2);
        margin: 0 calc(-1 * var(--pageMargin));
        max-width: none;
      }
    }
    @media (max-width: 480px) {
      .form-row .popup-container .form-wrapper {
        padding-right: 0.125rem;
        padding-left: 0.125rem;
        padding-bottom: 0.125rem;

        .form-content {
          border-radius: 0 0 8px 8px;
          .form-header {
            padding: 0 0.875rem;
          }
        }
      }
    }
  }
  @keyframes Faq-ring-low {
    0% {
      transform: rotate(0deg);
    }
    25% {
      transform: rotate(6deg);
    }
    50% {
      transform: rotate(-6deg);
    }
    75% {
      transform: rotate(6deg);
    }
    100% {
      transform: rotate(0deg);
    }
  }
  @keyframes Faq-ring-high {
    0% {
      transform: rotate(0deg);
    }
    25% {
      transform: rotate(12deg);
    }
    50% {
      transform: rotate(-12deg);
    }
    75% {
      transform: rotate(12deg);
    }
    100% {
      transform: rotate(0deg);
    }
  }
</style>
