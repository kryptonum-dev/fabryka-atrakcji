---
import imageToInlineSvg from '@/src/utils/image-to-inline-svg'
import { ButtonDataQuery, type ButtonDataProps } from '../../ui/button'
import Button from '../../ui/button'
import { ImageDataQuery, type ImageDataProps } from '../../ui/image'
import PortableText, { PortableTextQuery, type PortableTextValue } from '../../ui/portable-text'
import Carousel from './Carousel'
import { optimizeImage } from '@/src/utils/optimize-images'

export const ActivitiesCarousel_Query = `
  _type == "ActivitiesCarousel" => {
    "labelIcon": labelIcon.asset->url,
    ${PortableTextQuery('heading')}
    ${PortableTextQuery('paragraph')}
    ${ButtonDataQuery('cta')}
    activities[]->{
      name,
      ${ImageDataQuery('image')}
      description,
      details{
        participantsCount{
          min,
          max,
        },
      },
      "slug": slug.current,
    },
  },
`

type Props = {
  index: number
  sectionId?: string
  labelIcon: string
  heading: PortableTextValue
  paragraph: PortableTextValue
  cta: ButtonDataProps
  activities: {
    name: string
    image: ImageDataProps
    description: string
    details: {
      participantsCount: {
        min: number
        max: number
      }
    }
    slug: string
  }[]
}

const { index, sectionId, labelIcon, heading, paragraph, cta, activities } = Astro.props

const clientActivities = await Promise.all(
  activities.map(async (activity) => ({
    ...activity,
    image: await optimizeImage({
      image: activity.image.asset.url,
      width: activity.image.asset.metadata.dimensions.width,
      height: activity.image.asset.metadata.dimensions.height,
    }),
  }))
)

const svgContent = await imageToInlineSvg(labelIcon)
---

<section class="ActivitiesCarousel max-width" id={sectionId}>
  <header class="header">
    <div class="icon"><Fragment set:html={svgContent} /></div>
    <PortableText value={heading} class="heading" heading={index === 0 ? 'h1' : 'h2'} />
    <PortableText value={paragraph} class="paragraph" />
  </header>
  <Carousel client:load activities={clientActivities} index={index}>
    <Button {...cta} />
  </Carousel>
</section>

<style lang="scss">
  .ActivitiesCarousel {
    padding: clamp(3rem, calc(4vw / 0.48), 6rem) 0 clamp(3rem, calc(4vw / 0.48), 4rem);

    .header {
      max-width: 47rem;
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: 0.75rem;
      margin: 0 auto clamp(1.25rem, calc(1.25vw / 0.48), 1.5rem);
      text-align: center;

      .icon {
        position: relative;
        display: grid;
        place-items: center;
        width: clamp(2rem, calc(2.25vw / 0.48), 2.25rem);
        height: clamp(2rem, calc(2.25vw / 0.48), 2.25rem);
        padding-left: 0.125rem;
        background: var(--primary-500, #f67258);
        border-radius: 50%;

        svg {
          width: clamp(1rem, calc(1.25vw / 0.48), 1.25rem);
          height: clamp(1rem, calc(1.25vw / 0.48), 1.25rem);
        }
      }

      .paragraph {
        color: var(--primary-400, #74535e);
        font-size: var(--typography-body-xl, 1.125rem);
        line-height: 1.5;
        letter-spacing: -0.02em;
      }
    }

    @media (max-width: 56.1875rem) {
      .header {
        align-items: flex-start;
        max-width: none;
        text-align: left;
      }
    }
  }
</style>
