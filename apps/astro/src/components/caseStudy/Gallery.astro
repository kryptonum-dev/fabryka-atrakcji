---
import PortableText, { type PortableTextValue } from '../ui/portable-text'
import Image from '../ui/image'
import type { ImageDataProps } from '../ui/image'

import type { Language } from '@/src/global/languages'

const { lang } = (Astro.params as { lang: Language }) || 'pl'

const translations = {
  pl: {
    closePopup: 'Zamknij okno',
    closeVideo: 'Zamknij wideo',
  },

  en: {
    closePopup: 'Close popup',
    closeVideo: 'Close video',
  },
}

const t = translations[lang]

type Props = {
  mediaArray: {
    image: ImageDataProps
    youtubeId: string
  }[]
  galleryHeading: PortableTextValue
}

const { mediaArray, galleryHeading } = Astro.props as Props
---

<section class="CaseStudyGallery" data-media={JSON.stringify(mediaArray)}>
  <header class="header">
    <PortableText value={galleryHeading} heading="h2" class="heading" />
  </header>

  <div class="grid" data-has-many-images={mediaArray.length > 5}>
    {
      mediaArray.map((media) => (
        <button class="item" data-has-video={!!media.youtubeId}>
          <Image
            {...media.image}
            sizes="(max-width: 28.0625rem) 100vw, (max-width: 56.1875rem) 50vw, (max-width: 85.375rem) 33vw, 450px"
            loading="lazy"
          />
        </button>
      ))
    }
  </div>
  <div class="popup-overlay" aria-hidden="true"></div>
  <div class="popup" aria-hidden="true">
    <button class="popup-close" aria-label={t.closePopup}
      ><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none"
        ><path
          fill="#F67258"
          fill-rule="evenodd"
          d="M21.788 21.788a.723.723 0 0 0 0-1.022L18.122 17.1a9.157 9.157 0 1 0-1.022 1.022l3.666 3.666a.723.723 0 0 0 1.022 0ZM8.024 11.157c0-.4.324-.723.723-.723h4.82a.723.723 0 0 1 0 1.446h-4.82a.723.723 0 0 1-.723-.723Z"
          clip-rule="evenodd"></path></svg
      ></button
    >
    <button class="popup-close-video">
      <div class="icon">
        <svg xmlns="http://www.w3.org/2000/svg" width={24} height={24} viewBox="0 0 24 24" fill="none">
          <circle cx={12} cy={12} r={10} stroke="currentColor" stroke-width={1.5}></circle>
          <path
            d="M14.5 9.50002L9.5 14.5M9.49998 9.5L14.5 14.5"
            stroke="currentColor"
            stroke-width={1.5}
            stroke-linecap="round"></path>
        </svg>
      </div>
      <span>{t.closeVideo}</span>
    </button>
    <div class="popup-content">
      <img src="" alt="" class="popup-image" />
      <div class="popup-video" style="display: none;">
        <iframe
          width="100%"
          height="100%"
          src=""
          title="Odtwarzanie wideo"
          allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
          allowfullscreen></iframe>
      </div>
    </div>
  </div>
</section>

<style lang="scss">
  .CaseStudyGallery {
    display: flex;
    flex-direction: column;
    gap: 2rem;
    max-width: 85.375rem;
    margin: 0 auto;
    .header {
      max-width: calc(41.1875rem + 2 * var(--pageMargin));
      padding: 0 var(--pageMargin);
      text-align: center;
      margin: clamp(2rem, calc(3vw / 0.48), 3rem) auto 0;

      .heading {
        font-size: var(--typography-heading-l, 2rem);
      }
    }
    .grid {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      grid-template-rows: repeat(12, 1fr);
      gap: clamp(0.25rem, calc(0.5vw / 0.48), 0.5rem);

      &[data-has-many-images='true'] {
        grid-template-columns: repeat(3, 1fr);
      }

      .item {
        align-self: stretch;
        overflow: hidden;
        height: 100%;
        border-radius: 0.25rem;
        position: relative;
        display: block;
        cursor: pointer;

        &:hover {
          img {
            transform: translate(-50%, -50%) scale(1.1) rotate(3deg);
          }
        }
        &:focus:not(:focus-visible) {
          img {
            transform: translate(-50%, -50%) scale(1.25) rotate(0deg);
          }
        }

        img {
          position: absolute;
          min-height: 100%;
          width: 100%;
          left: 50%;
          top: 50%;
          transform: translate(-50%, -50%);
          object-fit: cover;
          transition: transform 250ms var(--easing);
        }

        &:nth-child(1),
        &:nth-child(2) {
          min-height: clamp(389px, calc(448vw / 7.68), 516px);
        }

        &:nth-child(3),
        &:nth-child(4),
        &:nth-child(5) {
          min-height: clamp(258px, calc(296vw / 7.68), 341px);
        }

        &:nth-child(6),
        &:nth-child(7),
        &:nth-child(8),
        &:nth-child(9) {
          min-height: clamp(197px, calc(197vw / 7.68), 227px);
        }

        &:nth-child(1) {
          grid-column: 1/2;
          grid-row: 1/7;
        }

        &:nth-child(2) {
          grid-column: 1/2;
          grid-row: 7/13;
        }

        &:nth-child(3) {
          grid-column: 2/3;
          grid-row: 1/5;
        }

        &:nth-child(4) {
          grid-column: 2/3;
          grid-row: 5/9;
        }

        &:nth-child(5) {
          grid-column: 2/3;
          grid-row: 9/13;
        }

        &:nth-child(6) {
          grid-column: 3/4;
          grid-row: 1/4;
        }

        &:nth-child(7) {
          grid-column: 3/4;
          grid-row: 4/7;
        }

        &:nth-child(8) {
          grid-column: 3/4;
          grid-row: 7/10;
        }

        &:nth-child(9) {
          grid-column: 3/4;
          grid-row: 10/13;
        }
      }
    }

    .popup-overlay {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(180deg, rgba(250, 247, 247, 0.3) 0%, #faf7f7 100%);
      backdrop-filter: blur(5px);
      z-index: 998;
      animation: CaseStudyGallery-popup-fade-in 150ms;

      &[aria-hidden='true'] {
        display: none;
      }
    }

    .popup {
      position: fixed;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      z-index: 999;
      background: transparent;
      display: grid;
      place-items: center;

      &[aria-hidden='true'] {
        display: none;
      }

      &[aria-hidden='false'] {
        .popup-image {
          animation: CaseStudyGallery-content-bounce-in 250ms cubic-bezier(0.18, 0.89, 0.32, 1.17);
          z-index: 1;
        }
        .popup-close {
          animation: CaseStudyGallery-close-button-entrance 350ms cubic-bezier(0.18, 0.89, 0.32, 1.27);
          z-index: 2;
        }
      }

      .popup-content {
        position: relative;
        width: 100%;
        height: 100%;
        display: grid;
        place-items: center;
      }

      .popup-image {
        max-width: 90vw;
        max-height: 90vh;
        object-fit: contain;
        border-radius: 0.25rem;
      }

      .popup-close {
        position: absolute;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
        display: grid;
        place-items: center;
        width: 2.75rem;
        height: 2.75rem;
        border-radius: 50%;
        background: var(--neutral-200, #f5f1ec);
        transition: transform 300ms cubic-bezier(0.18, 0.89, 0.32, 1.17);

        &:hover {
          transform: translate(-50%, -50%) scale(1.1);
        }

        &:focus:not(:focus-visible) {
          transform: translate(-50%, -50%) scale(0.95);
        }
      }

      .popup-close-video {
        position: absolute;
        right: 0%;
        bottom: 100%;
        display: flex;
        align-items: center;
        background: var(--neutral-200, #f5f1ec);
        border-radius: 999rem;
        gap: 0.25rem;
        min-height: 2.75rem;
        padding: 0.25rem 0.6725rem 0.25rem 0.25rem;
        animation: CaseStudyGallery-close-video-button-entrance 350ms cubic-bezier(0.18, 0.89, 0.32, 1.17);
        span {
          color: var(--primary-700, #600d2a);
          line-height: 1.6;
          font-size: var(--typography-body-s, 0.75rem);
          transition: transform 250ms var(--easing);
        }

        .icon {
          width: 2.5rem;
          height: 2.5rem;
          border-radius: 50%;
          display: grid;
          place-items: center;
          position: relative;
          isolation: isolate;
          overflow: hidden;
          transition:
            transform 250ms cubic-bezier(0.18, 0.89, 0.32, 1.17),
            color 150ms;
          color: var(--primary-500, #f67258);
          &:before,
          &:after {
            content: '';
            position: absolute;
            inset: 0;
            background: var(--neutral-100, #faf7f7);
            z-index: -2;
          }

          &:before {
            transform: scale(0);
            background: var(--primary-800, #f5f1ec);
            z-index: -1;
            transition: transform 250ms var(--easing);
            border-radius: 50%;
          }
        }

        &:hover {
          .icon {
            transform: scale(1.05);
          }

          span {
            transform: translateX(2px);
          }
        }

        &:focus:not(:focus-visible) {
          .icon {
            color: var(--neutral-100);

            &::before {
              transform: scale(1);
            }
          }

          span {
            transform: translateX(0);
          }
        }
      }

      .popup-video {
        width: calc(100vw - clamp(1.6rem, calc(2.4vw / 0.48), 3.2rem));
        max-width: 80rem;
        max-height: 90vh;
        aspect-ratio: 16/9;
      }
    }

    @media (max-width: 56.1875rem) {
      .header {
        text-align: left;
      }
      .grid {
        grid-template-columns: repeat(2, 1fr);
        grid-template-rows: repeat(8, auto);

        &[data-has-many-images='true'] {
          grid-template-columns: repeat(2, 1fr);
        }

        .item {
          &:nth-child(1) {
            grid-column: 1/2;
            grid-row: 1/4;
          }

          &:nth-child(2) {
            grid-column: 1/2;
            grid-row: 4/8;
          }

          &:nth-child(3) {
            grid-column: 2/3;
            grid-row: 1/3;
          }

          &:nth-child(4) {
            grid-column: 2/3;
            grid-row: 3/5;
          }

          &:nth-child(5) {
            grid-column: 2/3;
            grid-row: 5/8;
          }

          &:nth-child(6) {
            grid-column: 1/2;
            grid-row: 8/9;
          }

          &:nth-child(7) {
            grid-column: 2/3;
            grid-row: 8/9;
          }

          &:nth-child(8) {
            grid-column: 1/2;
            grid-row: 9/10;
          }

          &:nth-child(9) {
            grid-column: 2/3;
            grid-row: 9/10;
          }
        }
      }

      .popup {
        .popup-close {
          bottom: 0.25rem;
          top: unset;
          left: unset;
          right: 0.25rem;
        }
      }
    }

    @media (max-width: 28.0625rem) {
      .grid {
        grid-template-columns: 1fr;
        grid-template-rows: repeat(12, auto);

        &[data-has-many-images='true'] {
          grid-template-columns: 1fr;
        }

        .item {
          grid-column: 1/2 !important;
          grid-row: span 1 !important;

          &:nth-child(1),
          &:nth-child(2) {
            min-height: clamp(389px, calc(448vw / 7.68), 516px);
            aspect-ratio: 328/389;
          }

          &:nth-child(3),
          &:nth-child(4),
          &:nth-child(5) {
            min-height: clamp(258px, calc(296vw / 7.68), 341px);
            aspect-ratio: 328/258;
          }

          &:nth-child(6),
          &:nth-child(7),
          &:nth-child(8),
          &:nth-child(9) {
            min-height: clamp(197px, calc(197vw / 7.68), 227px);
            aspect-ratio: 328/197;
          }
        }
      }
    }

    @keyframes CaseStudyGallery-popup-fade-in {
      0% {
        opacity: 0;
      }
      100% {
        opacity: 1;
      }
    }

    @keyframes CaseStudyGallery-content-bounce-in {
      0% {
        transform: scale(0.9);
        opacity: 0;
      }
      100% {
        transform: scale(1);
        opacity: 1;
      }
    }

    @keyframes CaseStudyGallery-close-button-entrance {
      0% {
        opacity: 0;
        transform: translate(-50%, 0%) rotate(180deg) scale(0.5);
      }
      100% {
        opacity: 1;
        transform: translate(-50%, -50%) rotate(0) scale(1);
      }
    }

    @keyframes CaseStudyGallery-close-video-button-entrance {
      0% {
        opacity: 0;
        transform: translateX(30%) scale(0.75);
      }
      100% {
        opacity: 1;
        transform: translateX(0%) scale(1);
      }
    }
  }
</style>

<script>
  type Media = {
    image: {
      asset: {
        url: string
        altText: string
        playbackId: string
        thumbnailUrl: string
        duration: number
      }
    }
    youtubeId?: string
  }

  document.querySelectorAll('.CaseStudyGallery').forEach((gallery) => {
    const mediaArray = gallery.getAttribute('data-media') ? JSON.parse(gallery.getAttribute('data-media') || '[]') : []

    const items = gallery.querySelectorAll('.item')! as NodeListOf<HTMLElement>
    const popup = gallery.querySelector('.popup')! as HTMLElement
    const popupImage = gallery.querySelector('.popup-image')! as HTMLImageElement
    const popupVideo = gallery.querySelector('.popup-video')! as HTMLElement
    const iframe = popupVideo.querySelector('iframe')! as HTMLIFrameElement
    const overlay = gallery.querySelector('.popup-overlay')! as HTMLElement
    const closeButton = gallery.querySelector('.popup-close')! as HTMLElement
    const closeVideoButton = gallery.querySelector('.popup-close-video')! as HTMLElement

    function openPopup(media: Media) {
      if (media.youtubeId) {
        popupImage.style.display = 'none'
        popupVideo.style.display = 'block'
        closeVideoButton.style.display = 'flex'
        closeButton.style.display = 'none'
        iframe.src = `https://www.youtube.com/embed/${media.youtubeId}?autoplay=1`
        setTimeout(() => closeVideoButton.focus(), 0)
      } else {
        popupImage.src = media.image.asset.url
        popupImage.alt = media.image.asset.altText
        closeVideoButton.style.display = 'none'
        closeButton.style.display = 'block'
        popupImage.style.display = 'block'
        popupVideo.style.display = 'none'
        setTimeout(() => closeButton.focus(), 0)
      }

      popup.setAttribute('aria-hidden', 'false')
      overlay.setAttribute('aria-hidden', 'false')
    }

    function closePopup() {
      popup.setAttribute('aria-hidden', 'true')
      overlay.setAttribute('aria-hidden', 'true')
      iframe.src = ''
    }

    items.forEach((item, index) => {
      item.addEventListener('click', () => {
        const media = mediaArray[index]
        if (media) {
          openPopup(media)
        }
      })
    })
    ;[closeButton, closeVideoButton, overlay].forEach((element: HTMLElement) => {
      element.addEventListener('click', closePopup)
    })

    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') closePopup()
    })
  })
</script>
