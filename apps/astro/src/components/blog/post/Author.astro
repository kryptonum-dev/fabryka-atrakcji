---
import Image, { ImageDataQuery, type ImageDataProps } from '@/src/components/ui/image'
import type { Language } from '@/src/global/languages'

const lang = (Astro.params.lang as Language) || 'pl'

const translations = {
  pl: {
    writtenBy: 'Napisano przez',
  },
  en: {
    writtenBy: 'Written by',
  },
}

const t = translations[lang]

export const AuthorQuery = `
  author -> {
    displayName,
    ${ImageDataQuery('image')}
    description,
  }
`

export type AuthorProps = {
  displayName: string
  image: ImageDataProps
  description: {
    short: string
    full: string
  }
}

const { displayName, image, description } = Astro.props as AuthorProps
---

<section class="Author">
  <p class="full">{description.full}</p>
  <Image {...image} sizes="48px" />
  <p class="name">{t.writtenBy}{' '}{displayName}</p>
  <p>{description.short}</p>
</section>

<style lang="scss">
  .Author {
    display: grid;
    justify-items: center;
    padding: clamp(1.5rem, calc(2.5vw / 0.48), 2.5rem) 0.75rem 0;
    margin-top: clamp(3rem, calc(3.25vw / 0.48), 3.25rem);
    text-align: center;
    border-top: 2px solid;
    border-image: linear-gradient(
        to left,
        rgba(121, 141, 220, 0.6) 0%,
        rgba(231, 199, 143, 0.6) 25%,
        rgba(250, 116, 104, 0.6) 74%,
        rgba(121, 141, 220, 0.6) 100%
      )
      1;

    .full {
      margin-bottom: clamp(2rem, calc(2.5vw / 0.48), 2.5rem);
      color: var(--primary-800, #45051c);
      font-size: var(--typography-body-2xl, 1.5rem);
      line-height: 1.25;
      letter-spacing: -0.035em;
    }

    > img {
      margin-bottom: clamp(0.625rem, calc(0.75vw / 0.48), 0.75rem);
      border-radius: 50%;
      width: clamp(40px, calc(48vw / 7.68), 48px);
      aspect-ratio: 1;
    }

    .name {
      margin-bottom: 0.125rem;
      font-weight: 700;
      color: var(--primary-700, #600d2a);
      line-height: 1.5;
      font-size: var(--typography-body-xl, 1.125rem);
      letter-spacing: -0.03em;
    }
  }
</style>
