---
import type { PortableTextProps } from 'astro-portabletext/types'
import type { PortableTextBlock } from '@portabletext/types'
import { toPlainText } from 'astro-portabletext'
import { slugify } from '@/src/utils/slugify'

type Props = {
  title: string
  headings: PortableTextProps['value'][]
}

export type NavigationProps = Props

export const Navigation_Query = `
  "headings": content[length(style) == 2 && string::startsWith(style, "h")],
`

const { title, headings } = Astro.props

type HeadingGroup = {
  heading: { text: string; slug: string }
  subHeadings: { text: string; slug: string }[]
}

const groupedHeadings = headings?.reduce<HeadingGroup[]>((acc, heading) => {
  const style = (heading as PortableTextBlock).style as string
  const text = toPlainText(heading as PortableTextBlock).replace('❧ ', '')
  const slug = slugify(text)
  if (style === 'h2') {
    acc.push({ heading: { text, slug }, subHeadings: [] })
  } else if (style === 'h3' && acc.length > 0) {
    acc[acc.length - 1].subHeadings.push({ text, slug })
  }
  return acc
}, [])
---

<div>nav</div>
