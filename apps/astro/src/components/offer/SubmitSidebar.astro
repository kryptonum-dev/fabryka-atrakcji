---
import { getLangFromPath, type Language } from '@/src/global/languages'
import Button from '@/components/ui/Button'

export type Props = {
  type: 'hotels' | 'activities'
  basePrice?: {
    amount: number
    maxPeople: number
  }
  perPersonPrice: number
}
const lang = (getLangFromPath(Astro.url.pathname) as Language) || 'pl'

const translations = {
  pl: {
    people: {
      single: 'osoba',
      few: 'osoby',
      multiple: 'osób',
      additional: 'Każda dodatkowa osoba',
    },
    currency: 'zł',
    pricingPrefix: 'Szacowany koszt: ',
    activityAlert: 'Koszt może różnić się w zależności od lokalizacji i wybranego scenariusza',
    callout: 'Poznaj wstępną wycenę – bez podawania danych!',
    buttonText: 'Wybierz do kompleksowej wyceny',
  },
  en: {
    people: {
      single: 'person',
      few: 'people',
      multiple: 'people',
      additional: 'Each additional person',
    },
    currency: 'PLN',
    pricingPrefix: 'Estimated cost: ',
    activityAlert: 'The cost may vary depending on the location and chosen scenario',
    callout: 'Get an initial estimate - without providing data!',
    buttonText: 'Choose for a comprehensive estimate',
  },
}

const t = translations[lang]

function getPeopleText(participants: number, lang: Language) {
  if (lang === 'pl') {
    if (participants === 1) return t.people.single
    if (participants % 10 >= 2 && participants % 10 <= 4 && (participants % 100 < 10 || participants % 100 >= 20)) {
      return t.people.few
    }
    return t.people.multiple
  }
  return participants === 1 ? t.people.single : t.people.multiple
}

const { basePrice, perPersonPrice, type } = Astro.props
---

<div class="SubmitSidebar" id="submit-sidebar">
  <div class="wrapper">
    {
      basePrice ? (
        <div class="group-price">
          <p class="fixed">
            <strong>
              {basePrice.amount} {t.currency}
            </strong>
            {'/ '}
            {basePrice.maxPeople} {getPeopleText(basePrice.maxPeople, lang)}
          </p>
          <p class="additional">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="none">
              <path stroke="#F67258" stroke-linecap="round" stroke-width="1.5" d="M12 8H8m0 0H4m4 0V4m0 4v4" />
            </svg>
            <span>
              {t.people.additional}
              <strong>
                {perPersonPrice} {t.currency}
              </strong>
            </span>
          </p>
        </div>
      ) : (
        <div class="price-per-person">
          <p class="prefix">{t.pricingPrefix}</p>
          <p class="price">
            <strong>
              {perPersonPrice} {t.currency}{' '}
            </strong>{' '}
            / {t.people.single}
          </p>
        </div>
      )
    }
    <Button>{t.buttonText}</Button>
    {
      type === 'activities' && (
        <p class="activity-alert">
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="none">
            <path
              fill="#F67258"
              fill-rule="evenodd"
              d="M14.667 8A6.667 6.667 0 1 1 1.334 8a6.667 6.667 0 0 1 13.333 0Zm-6.666 3.834a.5.5 0 0 0 .5-.5v-4a.5.5 0 1 0-1 0v4a.5.5 0 0 0 .5.5Zm0-7.167A.667.667 0 1 1 8 6a.667.667 0 0 1 0-1.333Z"
              clip-rule="evenodd"
            />
          </svg>
          <span>{t.activityAlert}</span>
        </p>
      )
    }
  </div>
  <p class="callout">
    <svg xmlns="http://www.w3.org/2000/svg" width="17" height="16" fill="none"
      ><path
        fill="#F67258"
        fill-rule="evenodd"
        d="M6.896 2.134c-.163.138-.244.207-.33.265a1.809 1.809 0 0 1-.657.272c-.103.02-.209.029-.422.046-.534.043-.801.064-1.024.143-.515.182-.92.587-1.103 1.103-.079.223-.1.49-.143 1.024a3.82 3.82 0 0 1-.045.421 1.809 1.809 0 0 1-.272.657c-.058.087-.127.168-.266.33-.347.408-.521.612-.623.825a1.809 1.809 0 0 0 0 1.56c.102.213.276.417.623.825.139.163.208.244.266.33.133.2.225.422.272.657.02.102.028.209.045.421.043.535.064.802.143 1.025.182.515.588.92 1.103 1.103.223.078.49.1 1.024.142.213.017.32.026.422.046.234.046.458.139.656.272.087.058.168.127.33.266.409.347.612.521.826.623a1.808 1.808 0 0 0 1.56 0c.213-.102.417-.276.825-.623.162-.139.243-.208.33-.266a1.81 1.81 0 0 1 .657-.272c.102-.02.208-.029.42-.046.535-.042.802-.064 1.025-.142.516-.182.921-.588 1.103-1.103.079-.223.1-.49.143-1.025.017-.212.025-.319.045-.42.047-.236.14-.459.272-.658.059-.086.128-.167.266-.33.348-.408.522-.612.623-.825a1.808 1.808 0 0 0 0-1.56c-.101-.213-.275-.417-.623-.825-.138-.162-.207-.243-.266-.33a1.808 1.808 0 0 1-.272-.657c-.02-.102-.028-.208-.045-.421-.043-.534-.064-.801-.143-1.024a1.809 1.809 0 0 0-1.103-1.103c-.223-.08-.49-.1-1.024-.143-.213-.017-.319-.025-.421-.046a1.81 1.81 0 0 1-.657-.272c-.087-.058-.168-.127-.33-.265-.408-.348-.612-.522-.825-.624a1.809 1.809 0 0 0-1.56 0c-.214.102-.418.276-.825.624Zm4.52 4.442a.543.543 0 1 0-.767-.768L7.415 9.042 6.352 7.979a.543.543 0 0 0-.767.767l1.447 1.447a.543.543 0 0 0 .767 0l3.617-3.617Z"
        clip-rule="evenodd"></path>
    </svg>
    <span>{t.callout}</span>
  </p>
</div>

<style lang="scss">
  .SubmitSidebar {
    position: sticky;
    top: 89px;
    max-height: calc(100vh - 89px);
    max-width: 27.0625rem;
    justify-self: end;
    width: 100%;
    height: fit-content;
    margin-bottom: 2rem;
    .wrapper {
      margin-bottom: 0.625rem;
      background-color: var(--neutral-200, #f5f1ec);
      padding: 1.75rem;
      border-radius: 0.75rem;
      transition: background-color 150ms;

      .group-price {
        margin-bottom: 2rem;
        .fixed {
          margin-bottom: 0.125rem;
          strong {
            color: var(--primary-800, #45051c);
            font-size: var(--typography-body-2xl, 1.5rem);
            line-height: 1.25;
            letter-spacing: -0.035em;
            font-weight: 400;
          }
        }

        .additional {
          display: flex;
          align-items: flex-start;
          gap: 0.25rem;

          strong {
            color: var(--primary-800, #45051c);
            font-weight: 400;
            margin-left: 2px;
          }

          svg {
            margin-top: 0.25rem;
          }
        }
      }

      .price-per-person {
        margin-bottom: 1rem;
        display: flex;
        align-items: flex-end;
        gap: 0.5rem;

        .prefix {
          color: var(--primary-400, #45051c);
          font-size: var(--typography-body-m);
          line-height: 1.7;
          letter-spacing: -0.01em;
        }

        .price {
          strong {
            color: var(--primary-800, #45051c);
            font-size: var(--typography-body-2xl, 1.5rem);
            line-height: 1.25;
            letter-spacing: -0.035em;
            font-weight: 400;
          }
        }
      }

      :global(> button) {
        width: 100%;
        max-width: 100%;

        :global(span) {
          margin: 0 auto;
          padding-right: 1.75rem;
        }
      }

      .activity-alert {
        padding: 0 0.25rem;
        margin-top: 0.5rem;
      }
    }

    &.is-overlapping-faq {
      .wrapper {
        background-color: var(--neutral-100);
      }
    }

    .callout,
    .activity-alert {
      display: flex;
      align-items: flex-start;
      font-size: var(--typography-body-m, 0.875rem);
      line-height: 1.7;
      gap: 0.375rem;
      letter-spacing: -0.01em;

      svg {
        margin-top: 0.25rem;
        flex-shrink: 0;
      }
    }

    .callout {
      justify-content: center;
    }
  }
</style>

<script>
  const sidebar = document.getElementById('submit-sidebar')!
  const faqSection = document.getElementById('faq-section-marker')!

  let ticking = false

  const checkOverlap = () => {
    const sidebarStyle = window.getComputedStyle(sidebar)
    const position = sidebarStyle.position

    if (position === 'sticky' || position === 'fixed') {
      const sidebarRect = sidebar.getBoundingClientRect()
      const faqRect = faqSection.getBoundingClientRect()
      console.log(sidebarRect.bottom, sidebarRect.top, faqRect.bottom, faqRect.top)
      const isOverlapping = sidebarRect.bottom > faqRect.top && sidebarRect.top < faqRect.bottom

      if (isOverlapping) {
        sidebar.classList.add('is-overlapping-faq')
      } else {
        sidebar.classList.remove('is-overlapping-faq')
      }
    }
  }

  window.addEventListener('scroll', () => {
    if (!ticking) {
      window.requestAnimationFrame(() => {
        checkOverlap()
        ticking = false
      })
      ticking = true
    }
  })

  checkOverlap()
</script>
