---
import Layout from '@/src/layouts/Layout.astro'
import { LANGUAGES, type Language } from '@/global/languages'
import Breadcrumbs from '@/src/layouts/Breadcrumbs.astro'
import sanityFetch from '@/src/utils/sanity.fetch'
import metadataFetch from '@/src/utils/metadata.fetch'
import Hero from '@/src/components/caseStudy/Hero.astro'
import { ImageDataQuery, type ImageDataProps } from '@/src/components/ui/image'
import { PortableTextQuery, type PortableTextValue } from '@/src/components/ui/portable-text'
import Gallery from '@/src/components/caseStudy/Gallery.astro'
import ChallengeSolution from '@/src/components/caseStudy/ChallengeSolution.astro'
import Testimonial from '@/src/components/caseStudy/Testimonial.astro'

const prefixes = { pl: '/pl/realizacje/', en: '/en/case-studies/' }

export async function getStaticPaths() {
  const { lang, caseStudies } = Astro.params as { lang: Language; caseStudies: string }
  const prefix = prefixes[lang]
  const pages = await sanityFetch<{ slug: string }[]>({
    query: `
      *[_type == 'CaseStudy_Collection' && language == $language][] {
        "slug": slug.current,
      }
    `,
    params: { language: lang },
  })
  console.log(pages)
  return pages?.map(({ slug }) => ({
    params: { lang: lang, caseStudies: caseStudies, slug: slug.replace(prefix, '') },
  }))
}

const { lang, slug } = Astro.params as { lang: Language; caseStudies: string; slug: string }

const data = await sanityFetch<{
  slug: string
  name: string
  title: PortableTextValue
  primaryImage: ImageDataProps
  galleryHeading: PortableTextValue
  mediaArray: {
    image: ImageDataProps
    youtubeId: string
  }[]
  duration: number
  localization: string
  services: string[]
  challenge: PortableTextValue
  solution: PortableTextValue
  results: PortableTextValue
  testimonial?: {
    name: string
    position: string
    company: string
    logo: string
    photo: ImageDataProps
    content: PortableTextValue
  }
}>({
  query: `
    *[_type == 'CaseStudy_Collection' && language == $language && slug.current == $slug][0] {
      "slug": slug.current,
      name,
      ${PortableTextQuery('title')}
      ${ImageDataQuery('primaryImage')}
      ${PortableTextQuery('galleryHeading')}
      mediaArray[]{
        ${ImageDataQuery('image')}
        youtubeId
      },
      duration,
      localization,
      services,
      ${PortableTextQuery('challenge')}
      ${PortableTextQuery('solution')}
      ${PortableTextQuery('results')}
      testimonial{
        name,
        position,
        company,
        "logo": logo.asset->url,
        ${ImageDataQuery('photo')}
        ${PortableTextQuery('content')}
      }
    }
  `,
  params: { language: lang, slug: `${prefixes[lang]}${slug}` },
})

const metadata = await metadataFetch(data.slug)

if (!LANGUAGES.includes(lang) || !data) return Astro.rewrite('/404')
---

<Layout {...metadata}>
  <Breadcrumbs data={[{ name: data.name, path: data.slug }]} firstItemType="CaseStudyHero" />
  <Hero {...data} />
  <Gallery mediaArray={data.mediaArray} galleryHeading={data.galleryHeading} />
  <ChallengeSolution {...data} />
  {data.testimonial && <Testimonial {...data.testimonial} />}
</Layout>
